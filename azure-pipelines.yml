# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-16.04'
  demands:
  - npm

variables: # creation of variables so that it can be used later on , reference var using $()
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'


- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)


- task : DotNetCoreCLI@2 # install the packages 
  displayName: 'Restore Project dependencies(install project dependencies)'
  inputs: 
    command: 'restore'
    projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Build the project - $(buildConfiguration)'
#   inputs:
#     command: 'build'
#     arguments: '--no-restore --configuration $(buildConfiguration)'
#     projects: '**/*.csproj'


# - task: DotNetCoreCLI@2
#   displayName: 'Publish the project - $(buildConfiguration)'  # publishes or packages the app build result(including dependices) into a folder.
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishWebProjects: false
#     arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
#     zipAfterPublish: true # specifies to add the built result to a .zip file

- template: templates/build.yml
  parameters: 
      buildConfiguration: 'Debug'

    
- template: templates/build.yml
  parameters: 
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1 # publishes the .zip file to Azure piplines 
  displayName: 'Publish Artifact: drop'
  condition: succeeded() # Only zip's the file if the previous task succeseds .